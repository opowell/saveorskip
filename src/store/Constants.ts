import { openDB } from 'idb';
import { resetState } from '../store/index.js';
import { addProfile, addScraper } from './idb.js';
import RedditScraper from '../scrapers/reddit.js';
import DefaultScraper from '../scrapers/default.js';
export const DB_NAME = 'saveorskip';

export const STORE_LINKS = 'links';
export const STORE_LINKS_PROFILEID = 'profileId';
export const STORE_LINKS_TIME_ADDED = 'timeAdded';
export const STORE_LINKS_URL = 'url';
export const INDEX_LINKS_PROFILEID = STORE_LINKS_PROFILEID;
export const INDEX_LINKS_PROFILEID_TIMEADDED = STORE_LINKS_PROFILEID + '_' + STORE_LINKS_TIME_ADDED;

export const STORE_PROFILES = 'profiles';
export const INDEX_PROFILES_AUTOGENERATED = 'autoGenerated';
export const FIELD_PROFILES_AUTOGENERATED = 'autoGenerated';

export const STORE_SOURCES = 'sources';
export const STORE_SOURCES_CONSUMERID = 'consumerId'; // The user of links.
export const STORE_SOURCES_PROVIDERID = 'providerId'; // The provider of links.
export const INDEX_SOURCES_CONSUMERID = STORE_SOURCES_CONSUMERID;

export const STORE_SCRAPERS = 'scrapers';

const DB_VERSION = 5;

if (!('indexedDB' in window)) {
  console.log("This browser doesn't support IndexedDB");
}

// When anything below changes, increment DB_VERSION. This forces the database schema to be updated.
export const dbPromise = openDB(DB_NAME, DB_VERSION, {
  async upgrade(db, oldVersion, newVersion, transaction) {
    if (oldVersion === 0) {
      console.log('Creating stores');

      let profilesStore = db.createObjectStore(STORE_PROFILES, {
        keyPath: 'id',
        autoIncrement: true,
      });
      profilesStore.createIndex(INDEX_PROFILES_AUTOGENERATED, FIELD_PROFILES_AUTOGENERATED, {
        unique: false,
      });

      let linksStore = db.createObjectStore(STORE_LINKS, {
        keyPath: [STORE_LINKS_PROFILEID, 'url'],
      });
      linksStore.createIndex('saved', 'saved', { unique: false });
      linksStore.createIndex(INDEX_LINKS_PROFILEID, INDEX_LINKS_PROFILEID, { unique: false });
      linksStore.createIndex(INDEX_LINKS_PROFILEID_TIMEADDED, [STORE_LINKS_PROFILEID, STORE_LINKS_TIME_ADDED]);

      let sourcesStore = db.createObjectStore(STORE_SOURCES, { keyPath: [STORE_SOURCES_CONSUMERID, STORE_SOURCES_PROVIDERID] });
      sourcesStore.createIndex(STORE_SOURCES_CONSUMERID, STORE_SOURCES_CONSUMERID);
      sourcesStore.createIndex('saved', 'saved');
      sourcesStore.createIndex('url', 'url');

      let scrapersStore = db.createObjectStore(STORE_SCRAPERS, {
        keyPath: 'id',
        autoIncrement: true,
      });

      await addProfile({
        name: 'myProfile',
      });

      await addScraper(RedditScraper);
      await addScraper(DefaultScraper);

      resetState();
    }
  },
});
